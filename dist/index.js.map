{"version":3,"sources":["../node_modules/spark-md5/spark-md5.js","file_checksum.js","helpers.js","blob_record.js","blob_upload.js","key.js","direct_upload.js","direct_upload_controller.js","direct_uploads_controller.js","ujs.js","index.js"],"names":["fileSlice","File","prototype","slice","mozSlice","webkitSlice","FileChecksum","file","chunkSize","chunkCount","Math","ceil","size","chunkIndex","callback","create","md5Buffer","SparkMD5","ArrayBuffer","fileReader","FileReader","addEventListener","event","fileReaderDidLoad","fileReaderDidError","readNextChunk","append","target","result","binaryDigest","end","base64digest","btoa","name","start","min","bytes","call","readAsArrayBuffer","getMetaValue","element","findElement","document","head","getAttribute","findElements","root","selector","toArray","querySelectorAll","querySelector","dispatchEvent","type","eventInit","disabled","bubbles","cancelable","detail","createEvent","initEvent","value","Array","isArray","from","BlobRecord","checksum","url","key","attributes","filename","content_type","byte_size","xhr","XMLHttpRequest","open","responseType","setRequestHeader","csrfToken","undefined","requestDidLoad","requestDidError","send","JSON","stringify","blob","status","response","direct_upload","directUploadData","toJSON","parse","BlobUpload","headers","form","FormData","Key","console","log","Hash","id","DirectUpload","ipfsUrl","delegate","error","notify","upload","object","methodName","messages","DirectUploadController","input","directUpload","dispatch","hiddenInput","createElement","insertAdjacentElement","parentNode","removeChild","dispatchError","signed_id","progress","loaded","total","defaultPrevented","alert","uploadRequestDidProgress","inputSelector","DirectUploadsController","inputs","filter","files","length","controllers","createDirectUploadControllers","startNextController","controller","shift","forEach","push","processingAttribute","submitButtonsByForm","WeakMap","started","didClick","didSubmitForm","didSubmitRemoteElement","tagName","set","handleFormSubmissionEvent","hasAttribute","preventDefault","setAttribute","disable","removeAttribute","enable","submitForm","button","get","focus","click","style","display","appendChild","delete","autostart","window","ActiveStorage","setTimeout"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","import SparkMD5 from \"spark-md5\"\n\nconst fileSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice\n\nexport class FileChecksum {\n  static create(file, callback) {\n    const instance = new FileChecksum(file)\n    instance.create(callback)\n  }\n\n  constructor(file) {\n    this.file = file\n    this.chunkSize = 2097152 // 2MB\n    this.chunkCount = Math.ceil(this.file.size / this.chunkSize)\n    this.chunkIndex = 0\n  }\n\n  create(callback) {\n    this.callback = callback\n    this.md5Buffer = new SparkMD5.ArrayBuffer\n    this.fileReader = new FileReader\n    this.fileReader.addEventListener(\"load\", event => this.fileReaderDidLoad(event))\n    this.fileReader.addEventListener(\"error\", event => this.fileReaderDidError(event))\n    this.readNextChunk()\n  }\n\n  fileReaderDidLoad(event) {\n    this.md5Buffer.append(event.target.result)\n\n    if (!this.readNextChunk()) {\n      const binaryDigest = this.md5Buffer.end(true)\n      const base64digest = btoa(binaryDigest)\n      this.callback(null, base64digest)\n    }\n  }\n\n  fileReaderDidError(event) {\n    this.callback(`Error reading ${this.file.name}`)\n  }\n\n  readNextChunk() {\n    if (this.chunkIndex < this.chunkCount || (this.chunkIndex == 0 && this.chunkCount == 0)) {\n      const start = this.chunkIndex * this.chunkSize\n      const end = Math.min(start + this.chunkSize, this.file.size)\n      const bytes = fileSlice.call(this.file, start, end)\n      this.fileReader.readAsArrayBuffer(bytes)\n      this.chunkIndex++\n      return true\n    } else {\n      return false\n    }\n  }\n}","export function getMetaValue(name) {\n    const element = findElement(document.head, `meta[name=\"${name}\"]`)\n    if (element) {\n      return element.getAttribute(\"content\")\n    }\n  }\n  \n  export function findElements(root, selector) {\n    if (typeof root == \"string\") {\n      selector = root\n      root = document\n    }\n    const elements = root.querySelectorAll(selector)\n    return toArray(elements)\n  }\n  \n  export function findElement(root, selector) {\n    if (typeof root == \"string\") {\n      selector = root\n      root = document\n    }\n    return root.querySelector(selector)\n  }\n  \n  export function dispatchEvent(element, type, eventInit = {}) {\n    const { disabled } = element\n    const { bubbles, cancelable, detail } = eventInit\n    const event = document.createEvent(\"Event\")\n  \n    event.initEvent(type, bubbles || true, cancelable || true)\n    event.detail = detail || {}\n  \n    try {\n      element.disabled = false\n      element.dispatchEvent(event)\n    } finally {\n      element.disabled = disabled\n    }\n  \n    return event\n  }\n  \n  export function toArray(value) {\n    if (Array.isArray(value)) {\n      return value\n    } else if (Array.from) {\n      return Array.from(value)\n    } else {\n      return [].slice.call(value)\n    }\n  }","import { getMetaValue } from \"./helpers\"\n\nexport class BlobRecord {\n  constructor(file, checksum, url, key) {\n    this.file = file\n\n    this.attributes = {\n      key: key,\n      filename: file.name,\n      content_type: file.type || \"application/octet-stream\",\n      byte_size: file.size,\n      checksum: checksum\n    }\n\n    this.xhr = new XMLHttpRequest\n    this.xhr.open(\"POST\", url, true)\n    this.xhr.responseType = \"json\"\n    this.xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    this.xhr.setRequestHeader(\"Accept\", \"application/json\")\n    this.xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n\n    const csrfToken = getMetaValue(\"csrf-token\")\n    if (csrfToken != undefined) {\n      this.xhr.setRequestHeader(\"X-CSRF-Token\", csrfToken)\n    }\n\n    this.xhr.addEventListener(\"load\", event => this.requestDidLoad(event))\n    this.xhr.addEventListener(\"error\", event => this.requestDidError(event))\n  }\n\n  get status() {\n    return this.xhr.status\n  }\n\n  get response() {\n    const { responseType, response } = this.xhr\n    if (responseType == \"json\") {\n      return response\n    } else {\n      // Shim for IE 11: https://connect.microsoft.com/IE/feedback/details/794808\n      return JSON.parse(response)\n    }\n  }\n\n  create(callback) {\n    this.callback = callback\n    this.xhr.send(JSON.stringify({ blob: this.attributes }))\n  }\n\n  requestDidLoad(event) {\n    if (this.status >= 200 && this.status < 300) {\n      const { response } = this\n      const { direct_upload } = response\n      delete response.direct_upload\n      this.attributes = response\n      this.directUploadData = direct_upload\n      this.callback(null, this.toJSON())\n    } else {\n      this.requestDidError(event)\n    }\n  }\n\n  requestDidError(event) {\n    this.callback(`Error creating Blob for \"${this.file.name}\". Status: ${this.status}`)\n  }\n\n  toJSON() {\n    const result = {}\n    for (const key in this.attributes) {\n      result[key] = this.attributes[key]\n    }\n    return result\n  }\n}","\nexport class BlobUpload {\n    constructor(blob) {\n      this.blob = blob\n      this.file = blob.file\n  \n      const { url, headers } = blob.directUploadData\n  \n      this.xhr = new XMLHttpRequest\n      this.xhr.open(\"POST\", url, true)\n      this.xhr.responseType = \"text\"\n      for (const key in headers) {\n        this.xhr.setRequestHeader(key, headers[key])\n      }\n      this.xhr.addEventListener(\"load\", event => this.requestDidLoad(event))\n      this.xhr.addEventListener(\"error\", event => this.requestDidError(event))\n    }\n  \n    create(callback) {\n      this.callback = callback\n\n      const form = new FormData\n      form.append('file', this.file.slice())\n\n      this.xhr.send(form)\n    }\n  \n    requestDidLoad(event) {\n      const { status, response } = this.xhr\n      if (status >= 200 && status < 300) {\n        this.callback(null, response)\n      } else {\n        this.requestDidError(event)\n      }\n    }\n  \n    requestDidError(event) {\n      this.callback(`Error storing \"${this.file.name}\". Status: ${this.xhr.status}`)\n    }\n  }","export class Key {\n  static create(file, url, callback) {\n    const instance = new Key(file, url);\n    instance.create(callback);\n  }\n\n  constructor(file, url) {\n    this.file = file;\n\n    this.xhr = new XMLHttpRequest;\n    this.xhr.open(\"POST\", url, true);\n    this.xhr.responseType = \"json\";\n    this.xhr.addEventListener(\"load\", (event) => this.requestDidLoad(event));\n    this.xhr.addEventListener(\"error\", (event) => this.requestDidError(event));\n  }\n\n  create(callback) {\n    this.callback = callback;\n   \n    const form = new FormData\n    form.append('file', this.file.slice())\n    \n    this.xhr.send(form);\n  }\n\n  requestDidLoad(event) {\n    const { status, response } = this.xhr;\n    if (status >= 200 && status < 300) {\n      console.log(response)\n      this.callback(null, response.Hash)\n    } else {\n      this.requestDidError(event)\n    }\n  }\n\n  requestDidError(event) {\n    this.callback(\n      `Error storing \"${this.file.name}\". Status: ${this.xhr.status}`\n    );\n  }\n}\n","import { FileChecksum } from \"./file_checksum\"\nimport { BlobRecord } from \"./blob_record\"\nimport { BlobUpload } from \"./blob_upload\"\nimport { Key } from \"./key\";\n\nlet id = 0\n\nexport class DirectUpload {\n  constructor(file, url, ipfsUrl,delegate) {\n    this.id = ++id\n    this.file = file\n    this.url = url\n    this.ipfsUrl = ipfsUrl + '/api/v0/add?only-hash=true';\n    this.delegate = delegate\n  }\n\n  create(callback) {\n    FileChecksum.create(this.file, (error, checksum) => {\n      if (error) {\n        callback(error)\n        return\n      }\n\n      Key.create(this.file, this.ipfsUrl, (error, key) => {\n        if (error) {\n          callback(error);\n          return\n        }\n\n        const blob = new BlobRecord(this.file, checksum, this.url, key)\n        notify(this.delegate, \"directUploadWillCreateBlobWithXHR\", blob.xhr)\n  \n        blob.create(error => {\n          if (error) {\n            callback(error)\n          } else {\n            const upload = new BlobUpload(blob)\n            notify(this.delegate, \"directUploadWillStoreFileWithXHR\", upload.xhr)\n            upload.create(error => {\n              if (error) {\n                callback(error)\n              } else {\n                callback(null, blob.toJSON())\n              }\n            })\n          }\n        })\n      })\n    })\n  }\n}\n\nfunction notify(object, methodName, ...messages) {\n  if (object && typeof object[methodName] == \"function\") {\n    return object[methodName](...messages)\n  }\n}","import { DirectUpload } from \"./direct_upload\"\nimport { dispatchEvent } from \"./helpers\"\n\nexport class DirectUploadController {\n  constructor(input, file) {\n    this.input = input\n    this.file = file\n    this.directUpload = new DirectUpload(this.file, this.url, this.ipfsUrl, this)\n    this.dispatch(\"initialize\")\n  }\n\n  start(callback) {\n    const hiddenInput = document.createElement(\"input\")\n    hiddenInput.type = \"hidden\"\n    hiddenInput.name = this.input.name\n    this.input.insertAdjacentElement(\"beforebegin\", hiddenInput)\n\n    this.dispatch(\"start\")\n\n    this.directUpload.create((error, attributes) => {\n      if (error) {\n        hiddenInput.parentNode.removeChild(hiddenInput)\n        this.dispatchError(error)\n      } else {\n        hiddenInput.value = attributes.signed_id\n      }\n\n      this.dispatch(\"end\")\n      callback(error)\n    })\n  }\n\n  uploadRequestDidProgress(event) {\n    const progress = event.loaded / event.total * 100\n    if (progress) {\n      this.dispatch(\"progress\", { progress })\n    }\n  }\n\n  get url() {\n    return this.input.getAttribute(\"data-direct-upload-url\")\n  }\n\n  get ipfsUrl() {\n    return this.input.getAttribute(\"data-ipfs-url\");\n  }\n\n  dispatch(name, detail = {}) {\n    detail.file = this.file\n    detail.id = this.directUpload.id\n    return dispatchEvent(this.input, `direct-upload:${name}`, { detail })\n  }\n\n  dispatchError(error) {\n    const event = this.dispatch(\"error\", { error })\n    if (!event.defaultPrevented) {\n      alert(error)\n    }\n  }\n\n  // DirectUpload delegate\n\n  directUploadWillCreateBlobWithXHR(xhr) {\n    this.dispatch(\"before-blob-request\", { xhr })\n  }\n\n  directUploadWillStoreFileWithXHR(xhr) {\n    this.dispatch(\"before-storage-request\", { xhr })\n    xhr.upload.addEventListener(\"progress\", event => this.uploadRequestDidProgress(event))\n  }\n}","import { DirectUploadController } from \"./direct_upload_controller\"\nimport { findElements, dispatchEvent, toArray } from \"./helpers\"\n\nconst inputSelector = \"input[type=file][data-direct-upload-url]:not([disabled])\"\n\nexport class DirectUploadsController {\n  constructor(form) {\n    this.form = form\n    this.inputs = findElements(form, inputSelector).filter(input => input.files.length)\n  }\n\n  start(callback) {\n    const controllers = this.createDirectUploadControllers()\n\n    const startNextController = () => {\n      const controller = controllers.shift()\n      if (controller) {\n        controller.start(error => {\n          if (error) {\n            callback(error)\n            this.dispatch(\"end\")\n          } else {\n            startNextController()\n          }\n        })\n      } else {\n        callback()\n        this.dispatch(\"end\")\n      }\n    }\n\n    this.dispatch(\"start\")\n    startNextController()\n  }\n\n  createDirectUploadControllers() {\n    const controllers = []\n    this.inputs.forEach(input => {\n      toArray(input.files).forEach(file => {\n        const controller = new DirectUploadController(input, file)\n        controllers.push(controller)\n      })\n    })\n    return controllers\n  }\n\n  dispatch(name, detail = {}) {\n    return dispatchEvent(this.form, `direct-uploads:${name}`, { detail })\n  }\n}","import { DirectUploadsController } from \"./direct_uploads_controller\"\nimport { findElement } from \"./helpers\"\n\nconst processingAttribute = \"data-direct-uploads-processing\"\nconst submitButtonsByForm = new WeakMap\nlet started = false\n\nexport function start() {\n  if (!started) {\n    started = true\n    document.addEventListener(\"click\", didClick, true)\n    document.addEventListener(\"submit\", didSubmitForm)\n    document.addEventListener(\"ajax:before\", didSubmitRemoteElement)\n  }\n}\n\nfunction didClick(event) {\n  const { target } = event\n  if ((target.tagName == \"INPUT\" || target.tagName == \"BUTTON\") && target.type == \"submit\" && target.form) {\n    submitButtonsByForm.set(target.form, target)\n  }\n}\n\nfunction didSubmitForm(event) {\n  handleFormSubmissionEvent(event)\n}\n\nfunction didSubmitRemoteElement(event) {\n  if (event.target.tagName == \"FORM\") {\n    handleFormSubmissionEvent(event)\n  }\n}\n\nfunction handleFormSubmissionEvent(event) {\n  const form = event.target\n\n  if (form.hasAttribute(processingAttribute)) {\n    event.preventDefault()\n    return\n  }\n\n  const controller = new DirectUploadsController(form)\n  const { inputs } = controller\n\n  if (inputs.length) {\n    event.preventDefault()\n    form.setAttribute(processingAttribute, \"\")\n    inputs.forEach(disable)\n    controller.start(error => {\n      form.removeAttribute(processingAttribute)\n      if (error) {\n        inputs.forEach(enable)\n      } else {\n        submitForm(form)\n      }\n    })\n  }\n}\n\nfunction submitForm(form) {\n  let button = submitButtonsByForm.get(form) || findElement(form, \"input[type=submit], button[type=submit]\")\n\n  if (button) {\n    const { disabled } = button\n    button.disabled = false\n    button.focus()\n    button.click()\n    button.disabled = disabled\n  } else {\n    button = document.createElement(\"input\")\n    button.type = \"submit\"\n    button.style.display = \"none\"\n    form.appendChild(button)\n    button.click()\n    form.removeChild(button)\n  }\n  submitButtonsByForm.delete(form)\n}\n\nfunction disable(input) {\n  input.disabled = true\n}\n\nfunction enable(input) {\n  input.disabled = false\n}","import { start } from \"./ujs\"\nimport { DirectUpload } from \"./direct_upload\"\nexport { start, DirectUpload }\n\nfunction autostart() {\n  if (window.ActiveStorage) {\n    start()\n  }\n}\n\nsetTimeout(autostart, 1)"]}